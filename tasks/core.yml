---
# tasks file for wordpress, core
- name: check download
  shell: "ls {{ item.path }} | grep -q 'wp-'"
  register: check_download
  failed_when: False
  changed_when: False
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-core, wordpress-is-downloaded]

- name: download
  shell: "wp-cli --allow-root --no-color --path='{{ item.item.path }}' core download"
  with_items: check_download.results
  when: item.rc != 0
  tags: [configuration, wordpress, wordpress-core, wordpress-downloaded]

- name: configure
  shell: "wp-cli --allow-root --no-color --path='{{ item.path }}' core config --dbname='{{ item.dbname }}' --dbuser='{{ item.dbuser }}' --dbpass='{{ item.dbpass }}' --dbhost='{{ item.dbhost | default('localhost') }}'"
  args:
    creates: "{{ item.path }}/wp-config.php"
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-core, wordpress-configure]

- name: identify installation
  shell: "wp-cli --allow-root --no-color --path='{{ item.path }}' core is-installed"
  register: check_installation
  failed_when: False
  changed_when: False
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-core, wordpress-is-installed]

- name: install
  shell: "wp-cli --allow-root --no-color --path='{{ item.item.path }}' core install --url='{{ item.item.url }}' --title='{{ item.item.title }}' --admin_name='{{ item.item.admin_name | default('admin') }}' --admin_email='{{ item.item.admin_email }}' --admin_password='{{ item.item.admin_password }}'"
  with_items: check_installation.results
  when: item.rc != 0
  tags: [configuration, wordpress, wordpress-core, wordpress-install]

- name: check install
  shell: "wp-cli --allow-root --no-color --path='{{ item.path }}' core is-installed"
  changed_when: False
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-core, wordpress-install-check]
