---
# tasks file for wordpress
- name: install (wp-cli)
  get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: "{{ wordpress_wp_cli_install_dir }}/wp-cli"
    force: true
    owner: root
    group: root
    mode: 0755
  tags: [configuration, wordpress, wordpress-wp-cli-install]

- name: check download
  shell: "ls {{ item.path }} | grep -q 'wp-'"
  register: check_download
  failed_when: False
  changed_when: False
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-is-downloaded]

- name: download
  shell: "wp-cli --allow-root --no-color --path='{{ item.item.path }}' core download"
  with_items: check_download.results
  when: wordpress_installs and item.rc != 0
  tags: [configuration, wordpress, wordpress-downloaded]

- name: configure
  shell: "wp-cli --allow-root --no-color --quiet --path='{{ item.path }}' core config --dbname='{{ item.dbname }}' --dbuser='{{ item.dbuser }}' --dbpass='{{ item.dbpass }}' --dbhost='{{ item.dbhost | default('localhost') }}'"
  args:
    creates: "{{ item.path }}/wp-config.php"
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-configure]

- name: identify installation
  shell: "wp-cli --allow-root --no-color --path='{{ item.path }}' core is-installed"
  register: check_installation
  failed_when: False
  changed_when: False
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-is-installed]

- name: install
  shell: "wp-cli --allow-root --no-color --path='{{ item.item.path }}' core install --url='{{ item.item.url }}' --title='{{ item.item.title }}' --admin_name='{{ item.item.admin_name | default('admin') }}' --admin_email='{{ item.item.admin_email }}' --admin_password='{{ item.item.admin_password }}'"
  with_items: check_installation.results
  when: wordpress_installs and item.rc != 0
  tags: [configuration, wordpress, wordpress-install]

- name: check install
  shell: "wp-cli --allow-root --no-color --path='{{ item.path }}' core is-installed"
  with_items: wordpress_installs
  tags: [configuration, wordpress, wordpress-install-check]

- name: identify installation (theme)
  shell: "wp-cli --allow-root --no-color --path='{{ item.0.path }}' theme is-installed {{ item.1 }}"
  register: check_installation_themes
  failed_when: False
  changed_when: False
  with_subelements:
    - wordpress_installs
    - themes
  when: item.1
  tags: [configuration, wordpress, wordpress-is-installed-theme]

- name: install (theme)
  shell: "echo wp-cli --allow-root --no-color --path='{{ item.item.0.path }}' theme install {{ item.item.1 }} --activate"
  with_items: check_installation_themes.results
  when: check_installation_themes is defined and item.item.1 and item.rc != 0
  tags: [configuration, wordpress, wordpress-install-theme]

- name: check install (theme)
  shell: "wp-cli --allow-root --no-color --path='{{ item.0.path }}' theme is-installed {{ item.1 }}"
  with_subelements:
    - wordpress_installs
    - themes
  when: item.1
  tags: [configuration, wordpress, wordpress-install-theme-check]

- name: identify installation (plugin)
  shell: "wp-cli --allow-root --no-color --path='{{ item.0.path }}' plugin is-installed {{ item.1 }}"
  register: check_installation_plugins
  failed_when: False
  changed_when: False
  with_subelements:
    - wordpress_installs
    - plugins
  when: item.1
  tags: [configuration, wordpress, wordpress-is-installed-plugin]

- name: install (plugin)
  shell: "wp-cli --allow-root --no-color --path='{{ item.item.0.path }}' plugin install {{ item.item.1 }} --activate"
  with_items: check_installation_plugins.results
  when: check_installation_plugins is defined and item.item.1 and item.rc != 0
  tags: [configuration, wordpress, wordpress-install-plugin]

- name: check install (plugin)
  shell: "wp-cli --allow-root --no-color --path='{{ item.0.path }}' plugin is-installed {{ item.1 }}"
  with_subelements:
    - wordpress_installs
    - plugins
  when: item.1
  tags: [configuration, wordpress, wordpress-install-plugin-check]
